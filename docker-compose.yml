services:
  postgres:
    container_name: email_client_db
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - '${POSTGRES_PORT}:5432'
    volumes:
      - email-client-db:/var/lib/postgresql/data
  redis:
    container_name: email_client_redis
    image: redis:6.2-alpine
    restart: always
    entrypoint: redis-server --appendonly yes
    ports:
      - '6379:6379'
    volumes: 
      - redis-db:/var/lib/redis
  api:
    container_name: email_client_api
    build:
      dockerfile: Dockerfile
      context: ./api
      target: development
    volumes:
      - ./api:/usr/src/api
      - api_node_modules:/usr/src/api/node_modules
    env_file:
    - .env
    command: npm run start:debug
    ports:
      - '${API_PORT}:3000'
    depends_on:
      - postgres
      - redis
  front:
    container_name: email_client_front
    build:
      dockerfile: Dockerfile
      context: ./front
      target: development
    volumes:
      - ./front:/usr/src/front
      - /usr/src/front/node_modules
    env_file:
      - .env
    command: npm run start
    ports:
      - '${FRONT_PORT}:3000'
    depends_on:
      - api
volumes:
  email-client-db:
  redis-db:
  api_node_modules:

